#!/bin/sh

# This script does the following:
#	Run by itself, set the wallpaper (at X start).
#	If given a file, set that as the new wallpaper.
#	If given a directory, choose random file in it.
#	If wal is installed, also generates a colorscheme.

# Get list of monitors to supply
monitors=$(xrandr --listmonitors | awk '{ if ($4 != "") print $4}')

# Location of link to wallpaper link.
bglocs=("${XDG_DATA_HOME:-$HOME/.local/share/}/bg")

# rotate the background to the next screen
rotate () {
	i=${#bglocs[@]}
	while [[ $i -gt 1 ]]; do
		[[ -f ${bglocs[$i-2]} ]] && mv -f ${bglocs[$i-2]} ${bglocs[$i-1]}
		(( i-- ))
	done
}

# bg file for each monitor
i=0
for monitor in ${monitors[@]}; do
	if [[ $i -gt 0 ]]; then
		bglocs+=("${bglocs[0]}$i")
	fi
	(( i++ ))
done

trueloc="$(readlink -f "$1")" &&
case "$(file --mime-type -b "$trueloc")" in
	image/* )
		rotate &&
		ln -sf $(readlink -f "$1") ${bglocs[0]} && notify-send -i "${bglocs[0]}" "Changing wallpaper..."
		;;
	inode/directory ) ln -sf "$(find "$trueloc" -iregex '.*.\(jpg\|jpeg\|png\|gif\)' -type f | shuf -n 1)" "$bgloc" && notify-send -i "$bgloc1" "Random Wallpaper chosen." ;;
	*) notify-send "Error" "Not a valid image." ; exit 1;;
esac

num=0
for monitor in ${monitors[@]}; do
	[[ -f ${bglocs[$num]} ]] && last=${bglocs[$num]}
	xwallpaper --output $monitor --zoom "$last"
	(( num ++ ))
done
