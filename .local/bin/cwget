#!/bin/bash
# normal wget: wget "<url to download>" -o "<filename>"
# this script: cwget "<filename>" <-- gets url via xclip
#
# features:
# - take second entry from greenclip as possible filename
# - use yt-dlp or wget depending on clipboard content
# - try to continue downloading existing file after confirming continuation
# - can be called via system keybindings, then asks for filename via dmenu prompt
# - autocompletes with .mp4 if no suffix is given
# - also accepts curl calls

# if not executed from terminal ask for filename via dmenu
if [[ $TERM = linux ]]; then
	wm_name=$(xprop -id "$(xdotool getwindowfocus)" WM_NAME | awk -F '"' '{print $2}' | awk -F ' - ' '{print $NF}')
	case $wm_name in
		*"Brave" | *"LibreWolf") extractcurrenturl ;;
		*) filename="$(dmenu -p 'Filename:' < /dev/null)" &&
			[[ -z $filename ]] && exit 1 ;;
	esac

	# execute same script in new terminal session
	# and close terminal if successful
	eval "$TERMINAL -e ${BASH_SOURCE:-$0} --eval \"$filename\" && exit 0"

	exit $?
fi

set -e

exittrap() {
	notify-send -t 120000 "cwget exited"
}
trap exittrap EXIT

source "$HOME/.config/shell/rc.d/00_colors"
accessoir_file=$HOME/.local/bin/accessoirs/yt-accs
[[ -f $accessoir_file ]] &&
	source "$accessoir_file" ||
	exit 1

case $1 in
	--eval) iseval=1 && shift;;
	--live) islive=1 && shift;;
	--res) resoultion="$2" && shift && shift;;
	--url) get_url="$2" && shift && shift;;
	--download-list) dllist=1 && shift;;
esac

[[ -n $iseval ]] && cd ${XDG_VIDEOS_DIR:-$HOME/Videos} || cd $(dirname -- "$1")

colorize () {
	printf "${BI}$1${NC}"
}

overwrite () {
	local f=$(colorize "$1")
	echo "[o]verwite or [c]ontinue $f? -- nothing to exit"
	read ANSWER
	case $ANSWER in
		[o])
			rm "$filename"
			printf "$f removed\n\n"
		;;
		[c])
			continue=1
			printf "continueing $f\n\n"
		;;
		*) exit 0 ;;
	esac
}

# get current clipboard content as downlaod source
[[ -z $get_url ]] && get_url=$(xclip -selection clipboard -o -print0)

# determine which tool to use
case $get_url in
	*".youtu"*) yt=1 && ytbraw=1 ;;
	*"/youtu"*) yt=1 && ytbraw=1 ;;
	"curl "*) crl=1 ;;
	"http"* ) wgt=1 ;;&
 	*".m3u8"*) yt=1 && unset wgt ;;
	*       )
		echo "Clipboard content has no valid download pattern. Exiting."
		exit 0
	;;
esac

# remove list parameter from url to prevent downloading whole playlist
if [[ -n $ytbraw ]]; then
	get_url=${get_url%%?list*}
fi

# try to guess filename from 2nd last entry of clipboard history using greenclip
#cd - &> /dev/null
if [[ -z "$1" ]]
then
	[[ -z "$ytbraw" ]] && command -v greenclip &> /dev/null &&
    		filename="$(greenclip print | sed -n 2p)" &&
		[[ $filename =~ ^[a-zA-Z0-9_.[:space:]-]+$ ]] || filename=""
else
	filename="$1"
fi

# Check if file name is part of a series and increment episode number accordingly
files=( "$filename"* )
#regx='(.*) S([0-9]{2})E([0-9]{2})'
regx='/^([\w\s]+) S(\d{2})E(\d{2})(\.[a-z]+)?$/i'
if [[ $(printf "%s\n" "${files[@]}" | wc -l) -gt 0 ]]; then
	if [[ -f ${files[-1]} ]] && [[ "${files[-1]}" =~ $regx ]]; then
		title="${BASH_REMATCH[1]}"
		season="${BASH_REMATCH[2]}"
		episode=$((${BASH_REMATCH[3]}+1))
		episode=$(printf "%02d\n" $episode)
		filename="$title S${season}E${episode}"
	fi
fi

# if filename not empty & without file extension, fill in mp4 extension
[ -n "${filename}" ] && [[ $filename != *.* ]] &&
	filename="$filename.mp4"

# if file exists ask to continue or to overwrite file
[[ -f "$filename" ]] && overwrite "$filename"

# translate curl headers to wget and yt-dlp
if [[ -n $crl ]] ; then
	[[ -z $yt ]] &&
		get_url=$(echo ${get_url#curl } | sed -e 's/-H/--header/g') ||
		get_url=$(echo ${get_url#curl } | sed -e 's/-H/--add-header/g')
	wgt=1
fi

################################################

# if m3u8 or youtube link, use yt-dlp
if [[ -n $yt ]]; then
	#$TERMINAL -e bash -c "sleep 8; mpv '$PWD/$filename.part'; $SHELL" &
	_yt_dlp "$get_url"
fi

# use wget
if [[ -n $wgt ]] && [[ -z $yt ]] ; then
	#$TERMINAL -e bash -c "sleep 5; mpv '$PWD/$filename'; $SHELL" &
	while true ; do
		[[ -n $filename ]] && [[ -f $filename ]] &&
			wget_parms="-c"
		[[ -z $filename ]] &&
			filename=$(printf '%b' "$(echo "$get_url" | sed 's/%/\\x/g')") &&
			filename=$(basename "$filename")
		[[ ! $filename =~ \.[a-zA-Z0-9]+$ ]] &&
			echo "$filename is not a valid filename" && exit 1
		eval "wget -T 5 $wget_parms $get_url -O '$filename' && break;"
	done
	touch -m -a "$filename"
fi
