#!/bin/bash
# makes use of pup (https://github.com/ericchiang/pup)

BASEURL='https://bs.to'

hash pup 2>/dev/null || { echo "command pup not installed" >&2; exit 1; }

regx='(.*) S'
[[ $1 =~ $regx ]] &&
	SERIESNAME="${BASH_REMATCH[1]}" || SERIESNAME="$1"

[[ -z $SERIESNAME ]] && { echo "no name given, exiting"; exit 1; }

cd ${XDG_VIDEOS_DIR:-$HOME/Videos}/Series

# Check if file name is part of a series and increment episode number accordingly
files=( "$SERIESNAME"* )
regx='(.*) S([0-9]{2})E([0-9]{2})'
#regx='/^([\w\s]+) S(\d{2})E(\d{2})(\.[a-z]+)?$/i'

# if at least one file is found
# and last found file found exists
# and last found file matches regex
# then extract details
if [[ ${#files[@]} -gt 0 ]] &&
   [[ -f ${files[-1]} ]] &&
   [[ "${files[-1]}" =~ $regx ]]; then
	title="${BASH_REMATCH[1]}"
	season=$((10#${BASH_REMATCH[2]})) # 10#... explicitly declares base-10 numbers
	episode=$((10#${BASH_REMATCH[3]}))

	extension="${files[-1]#*.}" # get everything AFTER first dot, e.g. 'en.mp4'
	language="${extension%.*}" # get everything BEFORE first dot, e.g. 'en'
	[[ ${extension%*.} = $language ]] && language='de'
else
	echo "Nothing to do, exiting"
	exit 1
fi

# replace some special characters with a dash
urltitle=$( echo "$title" | perl -pe 's/[ :|]+/-/g' )

episodesjson=$( curl -s "$BASEURL/serie/$urltitle/$season/$language" | pup 'table.episodes tr td:first-child a json{}' )
next=$( echo "$episodesjson" | jq ". | nth($episode) | [.text, .title, .href] | @tsv" | tr -d '"')

IFS=$'\t'
next=( $( echo -e $next ) ) # -e (enable backslash escapes)

nextepisode=${next[0]}
nexttitle=${next[1]}
nexthref=${next[2]}

[[ $episode -lt $nextepisode ]] &&
	xdg-open "$BASEURL/$nexthref/" || { echo 'no new episode found'; exit 1; }

xclip -selection clippoard < /dev/null

printf "Waiting for a link in the clipboard ..."
until xclip -selection clipboard -o -print0 | grep -qP '^http.*';
do
	sleep 1 && printf "%0.s."
done && echo " found"

season=`printf '%02d\n' "$season"` # fill up with '0'
nextepisode=`printf '%02d\n' "$nextepisode"`

cwget "$title S${season}E${nextepisode}.$language.mp4"
